&method(:function) - это значение вызова метода. Метод method ищет указанное имя метода в текущем контексте и возвращает объект Method, который представляет его. & Оператор используется , для того чтобы передавать Proc как блок



method(:function) является отправкой сообщения (иногда называемого вызовом метода ) неявному получателю (то есть self). Он отправляет сообщение method неявному получателю (то есть self), передавая :function в качестве единственного аргумента.

:function является Symbol литералом, то есть это буквальное обозначение Symbol. Symbol тип данных, представляющий «имя чего-либо».

Оператор амперсанда с одинарным префиксом & «разворачивает» Proc в блок. Т.е. он позволяет пройти Proc там, где ожидается блок . Если объект еще не готов как Proc, ему будет отправлено to_proc сообщение, позволяющее ему преобразовать себя в Proc. (Оператор допустим только в списке аргументов и только для последнего аргумента. Это двойственный & символ в списке параметров, который «сворачивает» блок в Proc объект.)

Proc тип данных, представляющий исполняемый код Это основной библиотечный класс Ruby для первоклассных подпрограмм.

Итак, для этого нужно вызвать method метод self с :function аргументом, вызвать to_proc возвращаемое значение, «развернуть» полученный Proc объект в блок и передать этот блок в вызов, integrate как если бы было написано что-то вроде:

res = integrate(0, 1, a) do
  # something
end
