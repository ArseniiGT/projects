Use strict - это новая функция в ECMAScript 5, позволяющая поместить программу или функцию в «строгий» рабочий контекст. Этот строгий контекст предотвращает выполнение определенных действий и вызывает больше исключений.
Use strict выручает несколькими способами:

Он ловит некоторые распространенные ошибки кодирования, создавая исключения.
Он предотвращает или выдает ошибки, когда предпринимаются относительно «небезопасные» действия (например, получение доступа к глобальному объекту).
Это отключает функции, которые сбивают с толку или плохо продуманы.
Использование use strict:

    Запрещает глобальные переменные. (Ловит пропущенные varобъявления и опечатки в именах переменных)

    Тихие неудачные задания приведут к ошибке в строгом режиме (назначение NaN = 5;)

    Попытки удалить неустранимые свойства бросят ( delete Object.prototype)

    Требует, чтобы все имена свойств в литерале объекта были уникальными ( var x = {x1: "1", x1: "2"})

    Имена параметров функции должны быть уникальными ( function sum (x, x) {...})

    Запрещает восьмеричный синтаксис ( var x = 023;некоторые разработчики ошибочно предполагают, что предыдущий ноль не меняет число.)

    Запрещает withключевое слово

    eval в строгом режиме не вводит новые переменные

    Запрещает удаление простых имен ( delete x;)

    Запрещает привязку или присвоение имен evalи argumentsв любой форме

    Строгий режим не связывает свойства argumentsобъекта с формальными параметрами. (то есть в function sum (a,b) { return arguments[0] + b;}этом работает, потому что arguments[0]связан с aи так далее.)

    arguments.callee не поддерживается

